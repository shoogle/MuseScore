name: Deploy

# Set-up prior to first run:
# 1. Create 'production' environment: https://github.com/musescore/MuseScore/settings/environments
# 2. Enable 'required reviewers': MuseScore Editor Team

on:
  workflow_dispatch:
    inputs:
      platforms:
        description: 'Platforms to build:'
        default: 'dummy' # TODO: 'backend linux_arm32 linux_arm64 linux_x64 macos windows_x64 windows_portable'
        required: true
      release_type:
        description: 'Release type: test,alpha,beta,rc,stable'
        default: 'alpha' # TODO: test
        required: true
      create_tag:
        description: 'Create tag: on, off'
        default: 'on' # TODO: off
        required: false

defaults:
  run:
    shell: bash

jobs:

  get_tag_info:
    name: Get tag info
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.make_tag_info.outputs.TAG_NAME }}
      version_label: ${{ steps.make_tag_info.outputs.VERSION_LABEL }}
    steps:
    - name: Clone repo with history
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # entire history for all branches and tags
    - id: make_tag_info
      name: Make tag info
      env:
        RELEASE_TYPE: ${{ inputs.release_type }}
        CREATE_TAG: ${{ inputs.create_tag }}
      run: |
        git tag --list
        echo ----------
        buildscripts/ci/release/make_tag_name.sh | tee -a "${GITHUB_OUTPUT}"
        echo ----------
        echo "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA}"

  build:
    name: Build
    needs: get_tag_info
    uses: ./.github/workflows/build_all.yml
    with:
      platforms: ${{ inputs.platforms }}
      build_mode: ${{ inputs.release_type == 'stable' && 'stable' || 'testing' }}
      publish: 'off'
      sentry_project: ${{ inputs.mode == 'stable' && 'mu4' || 'sandbox' }}
      version_label: ${{ needs.get_tag_info.outputs.version_label }}

  update_learn_playlists:
    name: 'Update Homeâ†’Learn playlists'
    needs: build
    uses: ./.github/workflows/update_learn_playlists.yml
    with:
      mode: ${{ inputs.mode }}
      environment: production # requires approval

  create_draft_release:
    name: Create draft ${{ needs.get_tag_info.outputs.tag_name }} release
    needs:
      - get_tag_info # explicit dependency necessary to access outputs
      - update_learn_playlists
    if: ${{ ! cancelled() && inputs.create_tag == 'on' }}
    runs-on: ubuntu-latest
    environment:
      name: production # requires approval
      url: ${{ github.repositoryUrl }}/releases/tag/${{ needs.get_tag_info.outputs.tag_name }}
    env:
      TAG_NAME: ${{ needs.get_tag_info.outputs.tag_name }}
      RELEASE_TYPE: ${{ inputs.release_type }}
    steps:
    - name: Clone repository
      uses: actions/checkout@v4
    - name: Make release name
      run: |
        buildscripts/ci/release/make_release_name.sh | tee -a "${GITHUB_ENV}"
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: build.artifact
    - name: Extract artifacts
      run: |
        find build.artifact -type f
        exit 1 # TODO: check
    - name: Create tag
      run: |
        git tag "${TAG_NAME}" "${GITHUB_SHA}"
        git push origin "${TAG_NAME}"
    - name: Release
      uses: softprops/action-gh-release@v2
      with: # https://github.com/softprops/action-gh-release?tab=readme-ov-file#inputs
        draft: true
        prerelease: ${{ inputs.RELEASE_TYPE != 'stable' }}
        name: ${{ env.RELEASE_NAME }}
        tag_name: ${{ env.TAG_NAME }}

  # check release page and publish, wait for day, if there is no critical issues, then continue

  notify-users:
    needs: create_draft_release
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://github.com
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
